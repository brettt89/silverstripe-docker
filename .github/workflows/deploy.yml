name: Release
on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*'           # Push events to every tag not containing /
  pull_request:
    branches:
      - 'master'

env:
  IMAGE_PREFIX: brettt89/silverstripe-web

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [bullseye, buster, alpine]
        php: ['8.0', '8.1', '8.2']
        distro: [apache, fpm, cli]
        exclude:
          - os: alpine
            distro: apache
        include:
          - os: bullseye
            additional_distro: true
          - os: bullseye
            distro: apache
            additional_php: true
          - os: bullseye
            php: 8.1
            distro: apache
            latest: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_PREFIX }}
          tags: |
            type=raw,value=${{ matrix.php }}-${{ matrix.distro }}-${{ matrix.os }}
            type=raw,value=${{ matrix.php }}-${{ matrix.distro }},enable=${{ matrix.additional_distro || false }}
            type=raw,value=${{ matrix.php }},enable=${{ matrix.additional_php || false }}
            type=raw,value=latest,enable=${{ matrix.latest || false }}
            type=raw,value=${{ matrix.php }}-${{ matrix.distro }}-${{ matrix.os }}-{{date 'YYYYMMDD'}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to docker
        uses: docker/build-push-action@v4
        with:
          context: src/${{ matrix.php }}/${{ matrix.distro }}/${{ matrix.os }}
          load: true
          tags: ${{ env.IMAGE_PREFIX }}:${{ matrix.php }}-${{ matrix.distro }}-${{ matrix.os }}-test
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - id: test
        uses: ./.github/actions/build-test
        with:
          image: ${{ env.IMAGE_PREFIX }}:${{ matrix.php }}-${{ matrix.distro }}-${{ matrix.os }}-test
          php: ${{ matrix.php }}
          distro: ${{ matrix.distro }}
          os: ${{ matrix.os }}
      
      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v4
        with:
          context: src/${{ matrix.php }}/${{ matrix.distro }}/${{ matrix.os }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache